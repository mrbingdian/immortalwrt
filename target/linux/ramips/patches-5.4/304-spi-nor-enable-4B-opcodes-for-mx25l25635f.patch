This hack can be dropped after the next stable release from
v5.x-tree.

The problem was fixed upstream by

commit 2bffa65da43e ("mtd: spi-nor: Add a post BFPT fixup for MX25L25635E")

For reference see:
<https://github.com/openwrt/openwrt/pull/1743>

--- a/drivers/mtd/spi-nor/spi-nor.c
+++ b/drivers/mtd/spi-nor/spi-nor.c
@@ -2366,6 +2366,7 @@ static const struct flash_info spi_nor_i
	{ "mx25l25635e", INFO(0xc22019, 0, 64 * 1024, 512,
			 SPI_NOR_DUAL_READ | SPI_NOR_QUAD_READ)
			 .fixups = &mx25l25635_fixups },
+	{ "mx25l25635f", INFO(0xc22019, 0, 64 * 1024, 512, SPI_NOR_DUAL_READ | SPI_NOR_QUAD_READ | SPI_NOR_4B_OPCODES) },
	{ "mx25u25635f", INFO(0xc22539, 0, 64 * 1024, 512, SECT_4K | SPI_NOR_4B_OPCODES) },
	{ "mx25v8035f",  INFO(0xc22314, 0, 64 * 1024,  16,
			 SECT_4K | SPI_NOR_DUAL_READ | SPI_NOR_QUAD_READ) },
@@ -2586,11 +2586,12 @@ static const struct flash_info spi_nor_i
	{ },
};

-static const struct flash_info *spi_nor_read_id(struct spi_nor *nor)
+static const struct flash_info *spi_nor_read_id(struct spi_nor *nor,
+						const char *name)
{
	int			tmp;
	u8			*id = nor->bouncebuf;
-	const struct flash_info	*info;
+	const struct flash_info	*info, *first_match = NULL;

	if (nor->spimem) {
		struct spi_mem_op op =
@@ -2612,10 +2614,16 @@ static const struct flash_info *spi_nor_
	for (tmp = 0; tmp < ARRAY_SIZE(spi_nor_ids) - 1; tmp++) {
		info = &spi_nor_ids[tmp];
		if (info->id_len) {
-			if (!memcmp(info->id, id, info->id_len))
-				return &spi_nor_ids[tmp];
+			if (!memcmp(info->id, id, info->id_len)) {
+				if (!name || !strcmp(name, info->name))
+					return info;
+				if (!first_match)
+					first_match = info;
+			}
 		}
 	}
+	if (first_match)
+		return first_match;
	dev_err(nor->dev, "unrecognized JEDEC id bytes: %*ph\n",
		SPI_NOR_MAX_ID_LEN, id);
	return ERR_PTR(-ENODEV);
@@ -4907,7 +4915,7 @@ static const struct flash_info *spi_nor_get_flash_info
		info = spi_nor_match_id(name);
	/* Try to auto-detect if chip name wasn't specified or not found */
	if (!info)
-		info = spi_nor_read_id(nor);
+		info = spi_nor_read_id(nor, NULL);
	if (IS_ERR_OR_NULL(info))
		return ERR_PTR(-ENOENT);

@@ -4918,7 +4926,7 @@ static const struct flash_info *spi_nor_get_flash_info
	if (name && info->id_len) {
		const struct flash_info *jinfo;

-		jinfo = spi_nor_read_id(nor);
+		jinfo = spi_nor_read_id(nor, name);
		if (IS_ERR(jinfo)) {
			return jinfo;
		} else if (jinfo != info) {
